// Code generated by goctl. DO NOT EDIT!

package navigation

import (
	"context"
	"database/sql"
	"fmt"
	"strings"

	"github.com/zeromicro/go-zero/core/stores/builder"
	"github.com/zeromicro/go-zero/core/stores/sqlc"
	"github.com/zeromicro/go-zero/core/stores/sqlx"
	"github.com/zeromicro/go-zero/core/stringx"
)

var (
	oamNavigationTopFieldNames          = builder.RawFieldNames(&OamNavigationTop{})
	oamNavigationTopRows                = strings.Join(oamNavigationTopFieldNames, ",")
	oamNavigationTopRowsExpectAutoSet   = strings.Join(stringx.Remove(oamNavigationTopFieldNames, "`id`", "`create_time`", "`update_time`", "`create_at`", "`update_at`"), ",")
	oamNavigationTopRowsRemoveId        = strings.Join(stringx.Remove(oamNavigationTopFieldNames, "`id`"), ",")
	oamNavigationTopRowsWithPlaceHolder = strings.Join(stringx.Remove(oamNavigationTopFieldNames, "`id`", "`create_time`", "`update_time`", "`create_at`", "`update_at`"), "=?,") + "=?"
)

type (
	oamNavigationTopModel interface {
		Insert(ctx context.Context, data *OamNavigationTop) (sql.Result, error)
		FindOne(ctx context.Context, id int64) (*OamNavigationTop, error)
		Update(ctx context.Context, newData *OamNavigationTop) error
		Delete(ctx context.Context, id int64) error
	}

	defaultOamNavigationTopModel struct {
		conn  sqlx.SqlConn
		table string
	}

	OamNavigationTop struct {
		Id         int64  `db:"id"`          // id
		Name       string `db:"name"`        // 名称
		CreateTime int64  `db:"create_time"` // 创建时间
		CreateBy   string `db:"create_by"`   // 创建人
		Status     int64  `db:"status"`      // 状态  1:启用,0:禁用
	}
)

func newOamNavigationTopModel(conn sqlx.SqlConn) *defaultOamNavigationTopModel {
	return &defaultOamNavigationTopModel{
		conn:  conn,
		table: "`oam_navigation_top`",
	}
}

func (m *defaultOamNavigationTopModel) Delete(ctx context.Context, id int64) error {
	query := fmt.Sprintf("delete from %s where `id` = ?", m.table)
	_, err := m.conn.ExecCtx(ctx, query, id)
	return err
}

func (m *defaultOamNavigationTopModel) FindOne(ctx context.Context, id int64) (*OamNavigationTop, error) {
	query := fmt.Sprintf("select %s from %s where `id` = ? limit 1", oamNavigationTopRows, m.table)
	var resp OamNavigationTop
	err := m.conn.QueryRowCtx(ctx, &resp, query, id)
	switch err {
	case nil:
		return &resp, nil
	case sqlc.ErrNotFound:
		return nil, ErrNotFound
	default:
		return nil, err
	}
}

func (m *defaultOamNavigationTopModel) Insert(ctx context.Context, data *OamNavigationTop) (sql.Result, error) {
	query := fmt.Sprintf("insert into %s (%s) values (?, ?, ?, ?)", m.table, oamNavigationTopRowsRemoveId)
	ret, err := m.conn.ExecCtx(ctx, query, data.Name, data.CreateTime, data.CreateBy, data.Status)
	return ret, err
}

func (m *defaultOamNavigationTopModel) Update(ctx context.Context, data *OamNavigationTop) error {
	query := fmt.Sprintf("update %s set %s where `id` = ?", m.table, oamNavigationTopRowsWithPlaceHolder)
	_, err := m.conn.ExecCtx(ctx, query, data.Name, data.CreateBy, data.Status, data.Id)
	return err
}

func (m *defaultOamNavigationTopModel) tableName() string {
	return m.table
}
